<%= turbo_frame_tag "servers-actions-dialog" do %>
  <dialog id="server-actions-dialog" class="max-w-[60rem] backdrop:backdrop-blur-sm backdrop:bg-gray-100 backdrop:bg-opacity-30 p-6 rounded-lg shadow-lg">
    <form method="dialog" class="flex mb-4">
      <h2 class="text-2xl mr-5">Bootstrap server: <%= @server.name %></h2>
      <button class="ml-auto text-gray-500 hover:text-gray-700"><%= icon_close %></button>
    </form>
    <% if @server.uuid.to_s.include?("-000000000000") %>
      <p class="text-red-500 mb-4">
        ERROR: The UUID of this server '<%= @server.uuid %>' appears invalid. We have found that the motherboards of certain dedicated Hetzner servers have not been properly initialized. Reach out to their support and they should be able to fix this. Talos manager does not allow bootstraping with a faulty UUID since it prevents Talos configuration from being successful in case eg. NodeID based LUKS encryption is enabled.
      </p>
    <% else %>
      <%= form_with url: bootstrap_server_path, data: { turbo_frame: "_top" } do |f| %>
        <%=
          f.select(
            :talos_version,
            sorted_talos_versions,
            { include_blank: false, selected: TalosImageFactorySetting.singleton.version },
            class: "w-full mb-4",
            required: false,
          )
        %>
        <%=
          f.select(
            :talos_image_factory_schematic_id,
            TalosImageFactorySchematic.order(:name).pluck(:name, :id),
            { include_blank: "none", selected: TalosImageFactorySetting.singleton.talos_image_factory_schematic_id },
            class: "w-full mb-4",
            label: "Talos Image Factory Schematic",
            required: false,
            hint: "Use the #{link_to('Talos Schematics', talos_image_factory_schematics_path, class: 'text-blue-600 hover:underline', data: { turbo_frame: '_top'})} page to create custom schematics.",
          )
        %>

        <% disks = @server.lsblk.fetch("blockdevices").select { |disk| disk.fetch("type") == "disk" } %>
        <%
          disk_options = disks
            .map do |disk|
              partitions = disk.fetch("children", []).select { it.fetch("type").start_with?("part") }
              raid = disk.fetch("children", []).find { it.fetch("type").start_with?("raid") }&.fetch("name")
              suffix = raid ? "[RAID /dev/#{raid}]" : "[#{partitions.length} existing partition#{'s' if partitions.length != 1}]"
              label = "/dev/#{disk['name']} (#{number_to_human_size(disk['size'])}) #{suffix}"
              value = disk.fetch("wwn")

              [label, value]
            end
            .sort_by(&:first)
        %>
        <%=
          f.select(
            :bootstrap_disk_wwid,
            disk_options,
            {
              prompt: "Select a disk to bootstrap",
              # the first non raided disk should be selected by default
              selected: disk_options.find { |label, _| label.exclude?("RAID") }&.last,
              # raided disks should be disabled
              disabled: disk_options.select { |label, _| label.include?("RAID") }.map(&:last),
            },
            onchange: "
              if(!this.value || parseInt(this.selectedOptions[0].innerText.split('[')[1][0]) == 0)
                document.getElementById('bootstrap-warning').classList.add('hidden')
              else
                document.getElementById('bootstrap-warning').classList.remove('hidden')
            ",
            required: true,
            label: "Bootstrap disk",
          )
        %>

        <p id="bootstrap-warning" class="bg-yellow-100 text-yellow-800 p-4 rounded mb-4 hidden border border-yellow-200">
          <strong>Warning:</strong> Existing partitions on the selected disk will be wiped.
        </p>

        <%# Trigger change event to show/hide the warning based on the initially selected disk %>
        <script>document.getElementById("bootstrap_disk_wwid").dispatchEvent(new Event("change"))</script>

        <%= f.submit "Bootstrap!" %>
      <% end %>
    <% end %>
  </dialog>

  <script>
    // NOTE: We have to explicitly run showModal as just adding the open attribute won't enable the backdrop element
    document.getElementById("server-actions-dialog").showModal()
  </script>
<% end %>
